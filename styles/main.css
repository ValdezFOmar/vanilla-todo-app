@import url('normalize.css');

/* || General Configuration */

:root {
  font: 10px sans-serif;
  --dark-gray: hsl(216, 18%, 10%);
  --medium-gray: hsl(0, 0%, 60%);
  --light-gray: hsl(0, 0%, 91%);
  --white: hsl(0, 0%, 100%);

  --dark-blue: hsl(210, 32%, 28%);
  --blue: hsl(210, 70%, 60%);
  --dark-red: hsl(0, 44%, 44%);
  --red: hsl(0, 84%, 64%);
  --dark-green: hsl(114, 32%, 50%);
  --light-green: hsl(114, 100%, 40%);

  --highlight: var(--blue);
  --delete: var(--red);

  --header-height: 8rem;
}

/* --------------
This snippet will change all elements to have border box sizing
https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model
*/

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  font: inherit;
}

/* -------------- */

.light {
  --text: var(--dark-gray);
  --bg-color: var(--white);
  --border-color: var(--medium-gray);
  --completed: var(--light-green);
}

.dark {
  --text: var(--light-gray);
  --bg-color: var(--dark-gray);
  --border-color: var(--dark-blue);
  --completed: var(--dark-green);
}

body {
  color: var(--text);
  background-color: var(--bg-color);
  font-size: 1.4rem;
  display: flex;
  flex-flow: column nowrap;
  min-height: 100vh;
}

.single-column {
  display: flex;
  flex-flow: column nowrap;
}

/* Links styles */

a,
a:link,
a:visited {
  display: inline;
  color: var(--highlight);
  text-decoration: none;
  outline: none;
}

a:focus,
a:hover,
a:active {
  text-decoration: underline 0.1em;
}

a[href^='http'] {
  background-repeat: no-repeat;
  background-position-x: 100%;
  background-position-y: center;
  background-size: 0.8em;
  padding-right: 1em;
}

.dark a[href^='http'] {
  background-image: url('../icons/external-link-dark.svg');
}

.light a[href^='http'] {
  background-image: url('../icons/external-link-light.svg');
}

/* Responsive media */
img,
picture,
video {
  max-width: 100%;
}

/* --------------
This snippet will reset some common form elements issues
*/
button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

textarea {
  resize: none;
  overflow: auto;
}

input,
textarea {
  display: block;
  width: 100%;

  outline: none;

  padding: 0.2em;
  background-color: var(--bg-color);
  color: var(--text);
  border: 2px solid var(--border-color);
  border-radius: 0.5em;

  transition-property: border, color;
  transition-duration: 400ms;
}

:is(
  input,
  textarea
):is(
  :hover,
  :active,
  :focus
) {
  border-color: var(--highlight);
  color: var(--highlight);
}

/* -------------- */

.content-box {
  box-sizing: content-box;
}

/* || HEADER */
.sticky-header {
  padding: 1.5rem 1rem;
  border-bottom: 4px solid var(--border-color);
  min-height: var(--header-height);

  background-color: var(--bg-color);
  position: sticky;
  top: 0;
  z-index: 1;
}

.centered-row {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
}

h1 {
  font-size: 3rem;
  letter-spacing: 0.3ch;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
}

.centered-item {
  text-align: center;
  margin: 0 auto;
}

.icon-button {
  width: 3rem;
  height: 3rem;
  border: 0;
  border-radius: 0.5rem;
  margin: 0;
  padding: 0.5rem;
  color: var(--text);

  background-color: var(--bg-color);
  transition: background-color 400ms;
}

.icon-button:is(
  :hover,
  :active,
  :focus
) {
  background-color: currentColor;
}

.icon-button > .icon-image {
  max-height: 100%;
}


/* || Content styles*/

.none-list-style {
  padding: 0;
  margin: 0;
  list-style: none;
}

.content {
  padding: 2em 2em calc(10dvh + 6rem);

  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.card {
  height: 100%;
  margin: 0;
  padding: 1rem;
  border-radius: 1rem;
  border: 0.2rem solid var(--border-color);

  transition: border-color 400ms;
}

.card .card-header {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  gap: 1em;

  padding-bottom: 1rem;
  margin: 0 0 1rem 0;
  border-bottom: 0.2rem solid var(--border-color);
}

.card .card-title {
  font-size: 2rem;
  text-transform: capitalize;
  letter-spacing: 0.1ch;
  margin: 0 auto 0 0;
  word-break: break-word;
}

.card .card-content {
  font-size: 1.8rem;
  /*text-align: justify;*/
  line-height: 1.4;
  white-space: pre-wrap;
  word-break: break-word;

  margin: 1rem 0 0 0;
}

:is(.card, .card-header).completed-state {
  border-color: var(--completed);
}


/* || Floating add button */

.floating-button {
  position: fixed;
  right: 3.2rem;
  bottom: 8dvh;

  border-radius: 50%;
  padding: 1rem;
  width: 6rem;
  height: 6rem;

  color: var(--highlight);
  background-color: var(--highlight);
}

.floating-button:is(:hover, :active) {
  outline: 0.2em solid var(--highlight);
}


/* || Sliding panels */

.add-todo-panel {
  display: flex;
  flex-flow: column;
  width: 100vw;
  height: 35%;

  position: fixed;
  left: 0;
  bottom: -50%;
  z-index: 3;

  overflow-y: scroll;
  padding: 1.5rem;
  border-top: 2px solid var(--border-color);
  background-color: var(--bg-color);

  transition: bottom 300ms ease-out;
}

.add-todo-panel form {
  display: flex;
  flex-flow: column;
  gap: 1rem;

  background-color: var(--bg-color);
}

.form-section {
  display: flex;
  flex-flow: column nowrap;
  gap: 0.8rem;

  font-size: 2rem;
}

.expand-flex {
  flex: 1;
}

.add-todo-panel button[type='submit'] {
  height: 3rem;
  padding: 0 2em;

  font-size: 2rem;
  font-weight: bold;
  outline: none;
  color: var(--light-gray);
  background-color: var(--highlight);
  border: 0;
  border-radius: 2rem;

  transition-property: background-color, color;
  transition-duration: 400ms;
}

.add-todo-panel button[type='submit']:is(
  :hover,
  :active,
  :focus
) {
  background-color: var(--text);
  color: var(--highlight);
}

form:invalid button[type='submit'] {
  pointer-events: none;
  background-color: var(--dark-blue);
}

/* || masks */

.has-mask {
  position: relative;
}

.has-mask > .mask {
  display: none;
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  background-color: hsla(0, 0%, 0%, 0);
  transition: background-color 400ms linear 1s;
}

/* || Side panels */

.top-level-side-panel {
  position: fixed;
  top: 0;
  z-index: 3;

  height: 100dvh;
  max-width: 22rem;

  background-color: var(--bg-color);
}

.top-level-panel-container {
  font-size: 3rem;
  padding: 1em 0;

  display: flex;
  flex-direction: column;
  gap: 1em;
}

.panel-section {
  padding: 0 1em;
}

.right-panel {
  border-left: 2px solid var(--border-color);
  right: -22rem;
  transition: right 400ms ease-out;
}

.left-panel {
  border-right: 2px solid var(--border-color);
  left: -22rem;
  transition: left 400ms ease-out;
}

/* || Theme Button */

.theme-text {
  display: block;
  margin-bottom: 0.2em;
}

.change-theme-button {
  width: 100%;
  border: 0;
  border-radius: 1rem;
  padding: 0.3em 0.5em;
  text-align: center;
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 0.1ch;
  color: var(--bg-color);
  background-color: var(--text);

  transition-property: outline, background-color, color;
  transition-duration: 400ms;
}

.change-theme-button:is(:hover, :active, :focus) {
  color: var(--text);
  background-color: var(--bg-color);
  outline: var(--text) solid 0.2em;
}

/* || navbar */

.top-navbar :is(li, a) {
  color: var(--text);
  text-decoration: none;
  display: block;
  position: relative;
  outline: none;
}

.nav-list,
.nav-sublist {
  padding: 0;
  margin: 0;
  list-style: none;
}

.top-navbar .nav-list .nav-item .item-title {
  font-weight: bold;
  display: block;
  width: 100%;
  border-bottom: 2px solid currentColor;
  padding-bottom: 0.1em;
  margin-bottom: 1em;
}

.top-navbar .nav-list .nav-item .item-title:is(:focus, :hover)::before {
  position: absolute;
  left: -1.1ch;
  content: '#';
}

.nav-item .nav-sublist {
  font-size: 0.8em;
  padding-left: 0.4em;
}

.nav-sublist .nav-sub-item {
  margin-bottom: 0.5em;
}

.nav-sublist .nav-sub-item a {
  padding: 0.25em 0.5em;
  border-radius: 1rem;

  transition-property: background-color;
  transition-duration: 300ms;
}

.nav-sublist .nav-sub-item a:is(:focus, :hover, :active) {
  background-color: var(--highlight);
}


/* || Delete panel warning*/

.warning-panel {
  width: 300px;
  z-index: 3;
  position: fixed;
  top: 50%;
  left: 50%;
  translate: -50% -50%;

  letter-spacing: 1px;
  font-weight: bold;
  font-size: calc(1vw + 1.5rem);
  color: var(--white);
  background-color: var(--dark-red);
}

.warning-panel :is(.icon-warning, .message) {
  display: inline-block;
}

.warning-panel .container {
  display: flex;
  align-items: center;
}

.warning-panel .icon-warning {
  padding-left: 1em;
  width: 25%;
}

.warning-panel .message {
  word-break: break-word;
  padding: 1em;
  width: 75%;
}

.warning-panel .options button {
  width: 50%;
  display: inline-block;
  padding: 1em 2em;

  outline: none;
  border: 0;
  border-radius: 0;
  color: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  font-size: 0.9em;
  text-align: center;
  background-color: inherit;
}

.warning-panel .options button:is(:focus, :hover, :active) {
  background-color: var(--red);
}


@media screen and (min-width: 600px) {
  .sticky-header .icon-button {
    width: 4.5rem;
    height: 4.5rem;
  }

  h1 {
    font-size: 4rem;
  }

  .card .card-title {
    font-size: 2.5rem;
  }

  .card .card-content {
    font-size: 2rem;
  }

  .warning-panel {
    width: calc(400px + 10vw);
  }

  .add-todo-panel {
    width: calc(500px + 10vw);
    left: 50%;
    translate: -50% 0;
  }
}